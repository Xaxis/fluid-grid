//--------
// Grid dimensions
$fg-grid-width: 40px;
$fg-gutter: 20px;
$fg-col-total: 24;
$fg-col: $fg-grid-width + $fg-gutter;
$fg-col-1: $fg-col * 1;
$fg-col-2: $fg-col * 2;
$fg-col-3: $fg-col * 3;
$fg-col-4: $fg-col * 4;
$fg-col-5: $fg-col * 5;
$fg-col-6: $fg-col * 6;
$fg-col-7: $fg-col * 7;
$fg-col-8: $fg-col * 8;
$fg-col-9: $fg-col * 9;
$fg-col-10: $fg-col * 10;
$fg-col-11: $fg-col * 11;
$fg-col-12: $fg-col * 12;
$fg-col-13: $fg-col * 13;
$fg-col-14: $fg-col * 14;
$fg-col-15: $fg-col * 15;
$fg-col-16: $fg-col * 16;
$fg-col-17: $fg-col * 17;
$fg-col-18: $fg-col * 18;
$fg-col-19: $fg-col * 19;
$fg-col-20: $fg-col * 20;
$fg-col-21: $fg-col * 21;
$fg-col-22: $fg-col * 22;
$fg-col-23: $fg-col * 23;
$fg-col-24: $fg-col * 24;

// Grid based site dimensions
$site-grid-width: $fg-col * $fg-col-total;
$site-xl: $fg-col * 24;                           // 1440px
$site-desktop: $fg-col * 16;                      // 960px
$site-tablet: $fg-col * 12;                       // 720px
$site-mobile: $fg-col * 8;                        // 480px
$site-min-width: 320px;
$site-max-width: $site-desktop;
$site-mobile-breakpoint: $site-tablet;


//--------
// Calculate Grid Column Widths
// @$columns          The number of columns
// @$modifier         An override of the column dimension result
// @$breakpoint       An overriding mobile breakpoint (screen width) for media query trigger
// @$gutter           The gutter width
@mixin fg-grid-width(
  $columns,
  $modifier: 0,
  $margin: false,
  $breakpoint: $site-mobile-breakpoint,
  $gutter: $fg-gutter
) {

  // Default column styling
  &, & * {
    box-sizing: border-box;
  }
  position: relative;
  float: left;
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }

  // Margin overrides (used by custom column convention)
  @if $margin {
    @if $margin == 'first' {
     margin-left: 0;
    } @else {
      margin-left: $gutter;
    }
  }

  // Full grid width
  @if $columns == 1 and not $modifier {
    width: 100%;
  }

  // Calculate column width using css 'calc()'
  @else if $modifier == 0 {
    width: calc(((100% / #{$columns}) - #{$fg-gutter}) + (#{$gutter / $columns}));
  }

  // Re-calculate column width base on modifier (assumes 2 columns)
  @if $columns {

    // 1/4 width
    @if $modifier == '1/4' {
      width: calc(25% - (#{$gutter} / 2));
    }

    // 3/4 width
    @if $modifier == '3/4' {
      width: calc(75% - (#{$gutter} / 2));
    }

    // 1/3 width
    @if $modifier == '1/3' {
      width: 33.3333%;
    }

    // 2/3 width
    @if $modifier == '2/3' {
      width: calc(66.6666% - #{$gutter});
    }

    // 2/5 width
    @if $modifier == '2/5' {
      width: 40%;
    }

    // 5/2 width
    @if $modifier == '3/5' {
      width: calc(60% - #{$gutter});
    }
  }

  // Default media query
  @media only screen and (max-width: $breakpoint) {
    width: 100%;
    margin-left: 0;
    & + * {
      margin-top: $gutter;
    }
  }
}
