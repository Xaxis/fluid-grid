//--------
// Grid dimensions (REQUIRED)
$fg-col: 40px;                                    // Column width
$fg-gutter: 20px;                                 // Gutter width
$fg-fluid-gutter: 1.6;                            // Fluid gutter percentage

//--------
// Grid dimensions (AUXILIARY)
$fg-col-total: 25;                                // Column total
$fg-grid-width: $fg-col + $fg-gutter;             // Grid width
$fg-grid-total: $fg-grid-width * $fg-col-total;   // Grid total width

//--------
// Grid columns
$fg-col-1: $fg-grid-width * 1;
$fg-col-2: $fg-grid-width * 2;
$fg-col-3: $fg-grid-width * 3;
$fg-col-4: $fg-grid-width * 4;
$fg-col-5: $fg-grid-width * 5;
$fg-col-6: $fg-grid-width * 6;
$fg-col-7: $fg-grid-width * 7;
$fg-col-8: $fg-grid-width * 8;
$fg-col-9: $fg-grid-width * 9;
$fg-col-10: $fg-grid-width * 10;
$fg-col-11: $fg-grid-width * 11;
$fg-col-12: $fg-grid-width * 12;
$fg-col-13: $fg-grid-width * 13;
$fg-col-14: $fg-grid-width * 14;
$fg-col-15: $fg-grid-width * 15;
$fg-col-16: $fg-grid-width * 16;
$fg-col-17: $fg-grid-width * 17;
$fg-col-18: $fg-grid-width * 18;
$fg-col-19: $fg-grid-width * 19;
$fg-col-20: $fg-grid-width * 20;
$fg-col-21: $fg-grid-width * 21;
$fg-col-22: $fg-grid-width * 22;
$fg-col-23: $fg-grid-width * 23;
$fg-col-24: $fg-grid-width * 24;
$fg-col-25: $fg-grid-width * 25;

//--------
// Grid breakpoints
$fg-break-lg: $fg-col-25;                           // 1200px
$fg-break-md: $fg-col-16;                           // 960px
$fg-break-sm: $fg-col-13;                           // 780px
$fg-break-xs: $fg-col-8;                            // 480px

//--------
// Fluid-grid mixin for creating fluid and responsive columns.
// See: https://github.com/Xaxis/fluid-grid
//
// @cols              Number of columns
// @break             Breakpoint width
// @mod               Modifier ratio
// @gutter            Gutter width
// @fluid-gutter      Fluid gutter percentage width
@mixin fg-col(
  $cols: 1,
  $break: 0,
  $mod: 0,
  $gutter: $fg-gutter,
  $fluid-gutter: $fg-fluid-gutter
) {

  // Default column styling
  & {
    box-sizing: border-box;
  }
  position: relative;
  float: left;
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }

  // Fixed gutter
  html.csscalc & {
    margin-left: $gutter;
  }

  // Fluid gutter
  html:not(.csscalc) & {
    margin-left: #{$fluid-gutter + '%'};
  }

  // Eliminate first column margin
  html.csscalc &, html:not(.csscalc) & {
    &:first-child {
      margin-left: 0;
    }
  }

  // Equal column width
  @if $mod == 0 and $mod != 1 {

    // When css calc()
    html.csscalc & {
      width: -webkit-calc(((100% / #{$cols}) - #{$gutter}) + (#{$gutter / $cols}));
      width: calc(((100% / #{$cols}) - #{$gutter}) + (#{$gutter / $cols}));
    }

    // When NOT css calc()
    html:not(.csscalc) & {
      $ucw: (100 / $cols);
      $cw: 0;
      @if $cols == 1 {
        $cw: $ucw;
      } @else {
        $cw: $ucw - $fluid-gutter + ($fluid-gutter / $cols);
      }
      width: #{$cw + '%'};
    }
  }

  // Modifier column width
  @else if $mod {
    $mw: 0;

    // 1/5 width
    @if $mod == '1/5' {
      $mw: 20;
    }

    // 1/4 width
    @if $mod == '1/4' {
      $mw: 25;
    }

    // 1/3 width
    @if $mod == '1/3' {
      $mw: 33.3333;
    }

    // 2/5 width
    @if $mod == '2/5' {
      $mw: 40;
    }

    // 1/2 width
    @if $mod == '1/2' {
      $mw: 50;
    }

    // 3/5 width
    @if $mod == '3/5' {
      $mw: 60;
    }

    // 3/4 width
    @if $mod == '3/4' {
      $mw: 75;
    }

    // 2/3 width
    @if $mod == '2/3' {
      $mw: 66.6666;
    }

    // 4/5 width
    @if $mod == '4/5' {
      $mw: 80;
    }

    // When css calc()
    html.csscalc & {
      width: -webkit-calc(#{$mw + '%'} - (#{$gutter} / 2));
      width: calc(#{$mw + '%'} - (#{$gutter} / 2));
    }

    // When NOT css calc()
    html:not(.csscalc) & {
      $p: $mw / 100;
      $cw: ($p * 100) - $fluid-gutter + ($fluid-gutter / 2);
      width: #{$cw + '%'};
    }
  }

  // Responsive media query
  @if $break > 0 {
    @media only screen and (max-width: $break) {

      // When css calc() and NOT css calc()
      html.csscalc &, html:not(.csscalc) & {
        width: 100%;
        margin-left: 0;
        & + * {
          margin-top: $gutter;
        }

        // Include breakpoint style overrides
        @content;
      }
    }
  }
}
