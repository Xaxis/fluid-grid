//--------
// Grid dimensions
$fg-col: 40px;                                    // Column width
$fg-gutter: 20px;                                 // Gutter width
$fg-false-gutter: 1.6;                            // Fallback gutter percentage
$fg-col-total: 25;                                // Column total
$fg-grid-width: $fg-col + $fg-gutter;             // Grid width
$fg-grid-total: $fg-grid-width * $fg-col-total;   // Grid total width

//--------
// Grid columns
$fg-col-1: $fg-grid-width * 1;
$fg-col-2: $fg-grid-width * 2;
$fg-col-3: $fg-grid-width * 3;
$fg-col-4: $fg-grid-width * 4;
$fg-col-5: $fg-grid-width * 5;
$fg-col-6: $fg-grid-width * 6;
$fg-col-7: $fg-grid-width * 7;
$fg-col-8: $fg-grid-width * 8;
$fg-col-9: $fg-grid-width * 9;
$fg-col-10: $fg-grid-width * 10;
$fg-col-11: $fg-grid-width * 11;
$fg-col-12: $fg-grid-width * 12;
$fg-col-13: $fg-grid-width * 13;
$fg-col-14: $fg-grid-width * 14;
$fg-col-15: $fg-grid-width * 15;
$fg-col-16: $fg-grid-width * 16;
$fg-col-17: $fg-grid-width * 17;
$fg-col-18: $fg-grid-width * 18;
$fg-col-19: $fg-grid-width * 19;
$fg-col-20: $fg-grid-width * 20;
$fg-col-21: $fg-grid-width * 21;
$fg-col-22: $fg-grid-width * 22;
$fg-col-23: $fg-grid-width * 23;
$fg-col-24: $fg-grid-width * 24;
$fg-col-25: $fg-grid-width * 25;

//--------
// Grid breakpoints
$fg-break-lg: $fg-col-25;                           // 1200px
$fg-break-md: $fg-col-16;                           // 960px
$fg-break-sm: $fg-col-13;                           // 780px
$fg-break-xs: $fg-col-8;                            // 480px


//--------
// This mixin acts as the main column calculation function used by subsequent fluid-grid mixins.
//
// @$columns          The number of columns
// @$modifier         An override of the column dimension result
// @left-margin       Margin flag/string used to eliminate sibling left margins
// @$breakpoint       An overriding mobile breakpoint (screen width) for media query trigger
// @$gutter           The gutter width
// @false-gutter      The gutter width used when no css calc() support available
@mixin fg-grid-width(
  $columns,
  $modifier: 0,
  $left-margin: false,
  $breakpoint: 0,
  $gutter: $fg-gutter,
  $false-gutter: $fg-false-gutter
) {

  // Default column styling
  &, & * {
    box-sizing: border-box;
  }
  position: relative;
  float: left;
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }

  // Margin overrides (used by non-class based mixin convention)
  @if $left-margin {
    @if $left-margin == 'first' {

      // When css calc() and NOT css calc()
      html.csscalc &, html:not(.csscalc) & {
        margin-left: 0;
      }
    } @else {

      // When css calc()
      html.csscalc & {
        margin-left: $gutter;
      }

      // When NOT css calc()
      html:not(.csscalc) & {
        margin-left: #{$false-gutter + '%'};
      }
    }
  }

  // Full grid width
  @if $columns == 1 and not $modifier {
    width: 100%;
  }

  // Calculate column width using css 'calc()' when available
  @else if $modifier == 0 {

    // When css calc()
    html.csscalc & {
      width: -webkit-calc(((100% / #{$columns}) - #{$gutter}) + (#{$gutter / $columns}));
      width: calc(((100% / #{$columns}) - #{$gutter}) + (#{$gutter / $columns}));
    }

    // When NOT css calc()
    html:not(.csscalc) & {
      $ucw: (100 / $columns);
      $cw: 0;
      @if $columns == 1 {
        $cw: $ucw;
      } @else {
        $cw: $ucw - $false-gutter + ($false-gutter / $columns);
      }
      width: #{$cw + '%'};
    }
  }

  // Re-calculate column width based on modifier
  @else if $modifier {
    $mw: 0;

    // 1/5 width
    @if $modifier == '1/5' {
      $mw: 20;
    }

    // 1/4 width
    @if $modifier == '1/4' {
      $mw: 25;
    }

    // 1/3 width
    @if $modifier == '1/3' {
      $mw: 33.3333;
    }

    // 2/5 width
    @if $modifier == '2/5' {
      $mw: 40;
    }

    // 1/2 width
    @if $modifier == '1/2' {
      $mw: 50;
    }

    // 3/5 width
    @if $modifier == '3/5' {
      $mw: 60;
    }

    // 3/4 width
    @if $modifier == '3/4' {
      $mw: 75;
    }

    // 2/3 width
    @if $modifier == '2/3' {
      $mw: 66.6666;
    }

    // 4/5 width
    @if $modifier == '4/5' {
      $mw: 80;
    }

    // When css calc()
    html.csscalc & {
      width: -webkit-calc(#{$mw + '%'} - (#{$gutter} / 2));
      width: calc(#{$mw + '%'} - (#{$gutter} / 2));
    }

    // When NOT css calc()
    html:not(.csscalc) & {
      $p: $mw / 100;
      $cw: ($p * 100) - $false-gutter + ($false-gutter / 2);
      width: #{$cw + '%'};
    }
  }

  // Default mobile media query
  @media only screen and (max-width: $breakpoint) {

    // When css calc() and NOT css calc()
    html.csscalc &, html:not(.csscalc) & {
      width: 100%;
      margin-left: 0;
      & + * {
        margin-top: $gutter;
      }
    }
  }
}


//--------
// General Col Wrapper
// @cols              Number of columns
// @breakpoint        Set breakpoint width
// @mod               Modifier ratio
@mixin fg-col( $cols: 1, $breakpoint: 0, $mod: 0 ) {
  @include fg-grid-width($cols, $mod, true, $breakpoint);
  &:first-child {
    @include fg-grid-width($cols, $mod, 'first', $breakpoint);
  }
}


//--------
// One Col Wrapper
// @breakpoint        Set breakpoint width
// @mod               Modifier ratio
@mixin fg-1-col( $breakpoint: 0, $mod: 0 ) {
  @include fg-col(1, $breakpoint, $mod);
}


//--------
// Two Col Wrapper
// @breakpoint        Set breakpoint width
// @mod               Modifier ratio
@mixin fg-2-col( $breakpoint: 0, $mod: 0 ) {
  @include fg-col(2, $breakpoint, $mod);
}


//--------
// Three Col Wrapper
// @breakpoint        Set breakpoint width
// @mod               Modifier ratio
@mixin fg-3-col( $breakpoint: 0, $mod: 0 ) {
  @include fg-col(3, $breakpoint, $mod);
}


//--------
// Four Col Wrapper
// @breakpoint        Set breakpoint width
// @mod               Modifier ratio
@mixin fg-4-col( $breakpoint: 0, $mod: 0 ) {
  @include fg-col(4, $breakpoint, $mod);
}

//--------
// Five Col Wrapper
// @breakpoint        Set breakpoint width
// @mod               Modifier ratio
@mixin fg-5-col( $breakpoint: 0, $mod: 0 ) {
  @include fg-col(5, $breakpoint, $mod);
}


//--------
// Six Col Wrapper
// @breakpoint        Set breakpoint width
// @mod               Modifier ratio
@mixin fg-6-col( $breakpoint: 0, $mod: 0 ) {
  @include fg-col(6, $breakpoint, $mod);
}


//--------
// Seven Col Wrapper
// @breakpoint        Set breakpoint width
// @mod               Modifier ratio
@mixin fg-7-col( $breakpoint: 0, $mod: 0 ) {
  @include fg-col(7, $breakpoint, $mod);
}


//--------
// Eight Col Wrapper
// @breakpoint        Set breakpoint width
// @mod               Modifier ratio
@mixin fg-8-col( $breakpoint: 0, $mod: 0 ) {
  @include fg-col(8, $breakpoint, $mod);
}
